import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';

import { AppThunk,RootState } from '../../app/store';
import { FormState } from './interface';


export const initialState: FormState = {
  accountId: 0,
  messageBeforeSubmit: '',
  isSubmitted: false,
}

export const formSlice = createSlice({
  name: 'counter',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    submit: (state, action: PayloadAction<FormState>) => {
      return {
        ...state,
      }
    },
    changeFormValue: (state, action: PayloadAction<FormState>) => {
      return {
        ...state
      }
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { submit, changeFormValue } = formSlice.actions

export const selectState = (state: RootState) => state;

export default formSlice.reducer;
